<?phpdefined('BASEPATH') OR exit('No direct script access allowed');include('vendor/autoload.php');use ElephantIO\Client;use ElephantIO\Engine\SocketIO\Version2X;class Realestates extends CI_Controller {	/**	 * Index Page for this controller.	 *	 * Maps to the following URL	 * 		http://example.com/index.php/welcome	 *	- or -	 * 		http://example.com/index.php/welcome/index	 *	- or -	 * Since this controller is set as the default controller in	 * config/routes.php, it's displayed at http://example.com/	 *	 * So any other public methods not prefixed with an underscore will	 * map to /index.php/welcome/<method_name>	 * @see http://codeigniter.com/user_guide/general/urls.html	 */	function __construct()    {		parent::__construct();		$this->mysystem = $this->Admin_mo->getrow('system',array('id'=>'1'));	    if(!$this->session->userdata('uid'))	    { 			redirect('home');	    }		else		{			$this->loginuser = $this->Admin_mo->getrowjoinLeftLimit('users.*,usertypes.privileges as privileges,langs.dir as dir','users',array('usertypes'=>'users.utid=usertypes.id','langs'=>'users.lang=langs.code'),array('users.id'=>$this->session->userdata('uid')),'');			$this->sections = array();			$sections = $this->Admin_mo->getwhere('sections',array('active'=>'1'));			if(!empty($sections))			{				foreach($sections as $section) { $this->sections[$section->id] = $section->code; }			}		}	}	public function index()	{		if(strpos($this->loginuser->privileges, ',resee,') !== false && in_array('RE',$this->sections))		{		$data['admessage'] = '';		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$employees = $this->Admin_mo->get('users'); foreach($employees as $employee) { $data['employees'][$employee->id] = $employee->username; }				$places = $this->Admin_mo->get('places'); foreach($places as $place) { $data['places'][$place->id] = $place->title; }				$services = $this->Admin_mo->getjoinLeft('services.id as id,sv_d.title as title','services',array('sv_d'=>'services.id = sv_d.service'),array('sv_d.code'=>$this->loginuser->lang)); foreach($services as $service) { $data['services'][$service->id] = $service->title; }		if($this->loginuser->utid == 4) $where = array('realestates.employee'=>$this->session->userdata('uid'));		else $where = array();		//$data['preporders'] = $this->Admin_mo->getjoinLeft('realestates.*,places.title as place_title,orders.id as order_id,orders.user as customer,orders.from as from,orders.to as to,orders.time as order_time,orders.price as price,orders.accept as accept','realestates',array('places'=>'realestates.place = places.id','orders'=>'realestates.id = orders.realestate'),$where);		//$data['preporders'] = $this->Admin_mo->getjoinLeft('realestates.*,places.title as place_title,orders.id as order_id,orders.user as customer,orders.from as from,orders.to as to,orders.time as order_time,orders.price as price,orders.accept as accept,calls.id as call_id,calls.comment as call,calls.time as call_time','realestates',array('places'=>'realestates.place = places.id','orders'=>'realestates.id = orders.realestate','calls'=>'orders.id = calls.order'),$where);		$data['preporders'] = $this->Admin_mo->getjoinLeft('realestates.*,orders.id as order_id,orders.user as order_customer,orders.from as from,orders.to as to,orders.time as order_time,orders.price as price,orders.accept as accept,comments.id as comment_id,comments.user as commnted_by,comments.comment as comment,comments.evaluation as comment_eval,comments.time as comment_time,calls.id as call_id,calls.comment as call,calls.time as call_time','realestates',array('orders'=>'realestates.id = orders.realestate','comments'=>'realestates.id = comments.realestate','calls'=>'orders.id = calls.order'),$where);		if(!empty($data['preporders']))		{			for($i=0;$i<count($data['preporders']);$i++)			{				//$data['orders'][$data['preporders'][$i]->oid] = new stdClass();				$data['realestates'][$data['preporders'][$i]->id]['id'] = $data['preporders'][$i]->id;				$data['realestates'][$data['preporders'][$i]->id]['user'] = $data['preporders'][$i]->user;				$data['realestates'][$data['preporders'][$i]->id]['customer'] = $data['preporders'][$i]->customer;				$data['realestates'][$data['preporders'][$i]->id]['employee'] = $data['preporders'][$i]->employee;				$data['realestates'][$data['preporders'][$i]->id]['code'] = $data['preporders'][$i]->code;				$data['realestates'][$data['preporders'][$i]->id]['places'] = $data['preporders'][$i]->places;				$data['realestates'][$data['preporders'][$i]->id]['title'] = $data['preporders'][$i]->title;				$data['realestates'][$data['preporders'][$i]->id]['desc'] = $data['preporders'][$i]->desc;				$data['realestates'][$data['preporders'][$i]->id]['status'] = $data['preporders'][$i]->status;				$data['realestates'][$data['preporders'][$i]->id]['area'] = $data['preporders'][$i]->area;				$data['realestates'][$data['preporders'][$i]->id]['rooms'] = $data['preporders'][$i]->rooms;				$data['realestates'][$data['preporders'][$i]->id]['floors'] = $data['preporders'][$i]->floors;				$data['realestates'][$data['preporders'][$i]->id]['individuals'] = $data['preporders'][$i]->individuals;				$data['realestates'][$data['preporders'][$i]->id]['insurance'] = $data['preporders'][$i]->insurance;				$data['realestates'][$data['preporders'][$i]->id]['mprice'] = $data['preporders'][$i]->mprice;				$data['realestates'][$data['preporders'][$i]->id]['dprice'] = $data['preporders'][$i]->dprice;				$data['realestates'][$data['preporders'][$i]->id]['total'] = $data['preporders'][$i]->total;				$data['realestates'][$data['preporders'][$i]->id]['available_from'] = $data['preporders'][$i]->available_from;				$data['realestates'][$data['preporders'][$i]->id]['services'] = $data['preporders'][$i]->services;				$data['realestates'][$data['preporders'][$i]->id]['img'] = $data['preporders'][$i]->img;				$data['realestates'][$data['preporders'][$i]->id]['evaluation'] = $data['preporders'][$i]->evaluation;				$data['realestates'][$data['preporders'][$i]->id]['uid'] = $data['preporders'][$i]->uid;				$data['realestates'][$data['preporders'][$i]->id]['time'] = $data['preporders'][$i]->time;				$data['realestates'][$data['preporders'][$i]->id]['active'] = $data['preporders'][$i]->active;				if($data['preporders'][$i]->comment != '')				{					$data['realestates'][$data['preporders'][$i]->id]['comments'][$data['preporders'][$i]->comment_id]['commnted_by'] = $data['preporders'][$i]->commnted_by;					$data['realestates'][$data['preporders'][$i]->id]['comments'][$data['preporders'][$i]->comment_id]['comment'] = $data['preporders'][$i]->comment;					$data['realestates'][$data['preporders'][$i]->id]['comments'][$data['preporders'][$i]->comment_id]['comment_eval'] = $data['preporders'][$i]->comment_eval;					$data['realestates'][$data['preporders'][$i]->id]['comments'][$data['preporders'][$i]->comment_id]['comment_time'] = $data['preporders'][$i]->comment_time;				}				if($data['preporders'][$i]->order_customer != '')				{					$data['realestates'][$data['preporders'][$i]->id]['items'][$data['preporders'][$i]->order_id]['id'] = $data['preporders'][$i]->order_id;					$data['realestates'][$data['preporders'][$i]->id]['items'][$data['preporders'][$i]->order_id]['customer'] = $data['preporders'][$i]->order_customer;					$data['realestates'][$data['preporders'][$i]->id]['items'][$data['preporders'][$i]->order_id]['from'] = $data['preporders'][$i]->from;					$data['realestates'][$data['preporders'][$i]->id]['items'][$data['preporders'][$i]->order_id]['to'] = $data['preporders'][$i]->to;					$data['realestates'][$data['preporders'][$i]->id]['items'][$data['preporders'][$i]->order_id]['order_time'] = $data['preporders'][$i]->order_time;					$data['realestates'][$data['preporders'][$i]->id]['items'][$data['preporders'][$i]->order_id]['price'] = $data['preporders'][$i]->price;					$data['realestates'][$data['preporders'][$i]->id]['items'][$data['preporders'][$i]->order_id]['accept'] = $data['preporders'][$i]->accept;				}				if($data['preporders'][$i]->call != '')				{					$data['realestates'][$data['preporders'][$i]->id]['items'][$data['preporders'][$i]->order_id]['calls'][$data['preporders'][$i]->call_id]['call'] = $data['preporders'][$i]->call;					$data['realestates'][$data['preporders'][$i]->id]['items'][$data['preporders'][$i]->order_id]['calls'][$data['preporders'][$i]->call_id]['call_time'] = $data['preporders'][$i]->call_time;				}			}		}		//echo '<pre>'; print_r($data['realestates']); echo '</pre>';		$this->load->view('calenderdate');		$this->load->view('headers/realestates',$data);		$this->load->view('sidemenu',$data);		$this->load->view('topmenu',$data);		$this->load->view('admin/realestates',$data);		$this->load->view('footers/realestates');		$this->load->view('messages');		}		else		{		$data['title'] = 'realestates';		$data['admessage'] = 'youhavenoprivls';		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$this->load->view('headers/realestates',$data);		$this->load->view('sidemenu',$data);		$this->load->view('topmenu',$data);		$this->load->view('admin/messages',$data);		$this->load->view('footers/realestates');		$this->load->view('messages');		}	}	public function call($realstate_id,$order_id)	{		if(strpos($this->loginuser->privileges, ',ocall,') !== false && in_array('RE',$this->sections))		{		$realstate_id = abs((int)($realstate_id));		if($realstate_id > 0)		{			$realstate = $this->Admin_mo->getrow('realestates',array('id'=>$realstate_id,'employee'=>$this->session->userdata('uid')));			$order = $this->Admin_mo->getrow('orders',array('id'=>$order_id,'realestate'=>$realstate_id));			if(!empty($realstate) && !empty($order))			{				$id = $this->Admin_mo->set('calls', array('order'=>$order_id,'comment'=>set_value('call'),'time'=>time()));				if(empty($id))				{					$_SESSION['time'] = time(); $_SESSION['message'] = 'somthingwrong';				}				else				{					$_SESSION['time'] = time(); $_SESSION['message'] = 'success';				}				redirect('realestates', 'refresh');			}			else			{				$data['title'] = 'realestates';				$data['admessage'] = 'youhavenoprivls';				$data['system'] = $this->mysystem;				$this->lang->load($this->loginuser->lang, $this->loginuser->lang);				$this->config->set_item('language', $this->loginuser->lang);				$this->load->view('headers/realestates',$data);				$this->load->view('sidemenu',$data);				$this->load->view('topmenu',$data);				$this->load->view('admin/messages',$data);				$this->load->view('footers/realestates');				$this->load->view('messages');			}		}		else		{			$data['title'] = 'realestates';			$data['admessage'] = 'youhavenoprivls';			$data['system'] = $this->mysystem;			$this->lang->load($this->loginuser->lang, $this->loginuser->lang);			$this->config->set_item('language', $this->loginuser->lang);			$this->load->view('headers/realestates',$data);			$this->load->view('sidemenu',$data);			$this->load->view('topmenu',$data);			$this->load->view('admin/messages',$data);			$this->load->view('footers/realestates');			$this->load->view('messages');		}		}		else		{			$data['title'] = 'realestates';			$data['admessage'] = 'youhavenoprivls';			$data['system'] = $this->mysystem;			$this->lang->load($this->loginuser->lang, $this->loginuser->lang);			$this->config->set_item('language', $this->loginuser->lang);			$this->load->view('headers/realestates',$data);			$this->load->view('sidemenu',$data);			$this->load->view('topmenu',$data);			$this->load->view('admin/messages',$data);			$this->load->view('footers/realestates');			$this->load->view('messages');		}	}	public function accept()	{		if(isset($_POST['val'],$_POST['id']) && $_POST['val'] > 0 && $_POST['id'] > 0)		{			$order = $this->Admin_mo->getjoinLeft('realestates.id as id,realestates.code as code,realestates.available_from as available_from,orders.user as user,orders.realestate as realestate,orders.from as from,orders.to as to,orders.price as price','orders',array('realestates'=>'orders.realestate = realestates.id'),array('orders.id'=>$_POST['id'],'orders.accept'=>'0','realestates.employee'=>$this->session->userdata('uid')));			if(isset($order) && count($order) == 1)			{				if($_POST['val'] == '1')				{					//$orders = $this->Admin_mo->getjoinLeft('realestates.code as code,realestates.available_from as available_from,orders.user as user,orders.realestate as realestate,orders.from as from,orders.to as to,orders.price as price','orders',array('realestates'=>'orders.realestate = realestates.id'),array('realestates.id'=>$order[0]->id,'orders.accept'=>'0','orders.from <= '=>$order[0]->to,'realestates.employee'=>$this->session->userdata('uid')));					//$code = mt_rand(11111,99999);					$code = substr(str_shuffle('0123456789abcdefghijklmnopqrstuvwxyz!@#$%^&*()') , 0 , 15);					//$id = $this->Admin_mo->set('rents', array('user'=>$order[0]->user,'realestate'=>$order[0]->realestate,'from'=>$order[0]->from,'to'=>$order[0]->to,'price'=>$order[0]->price,'time'=>time()));					//if($id && $this->Admin_mo->update('orders',array('accept'=>$_POST['val']),array('id'=>$_POST['val']))) echo 1;					if($order[0]->from > $order[0]->available_from)					{						if($this->Admin_mo->update('orders',array('code'=>$code,'accept'=>$_POST['val']),array('id'=>$_POST['id'])))						{							//$this->Admin_mo->set('rents', array('user'=>$order[0]->user,'realestate'=>$order[0]->realestate,'from'=>$order[0]->from,'to'=>$order[0]->to,'price'=>$order[0]->price,'time'=>time()));							$version = new Version2X('http://localhost:3001');							$client = new Client($version);							$client->initialize();							$client->emit('new_notify', ['user'=>$order[0]->user,'message'=>'تم التاكد من اتاحة الوحدة المسجلة بكود '.$order[0]->code.' اضغط على الرابط التالي للدفع http://nojol.com/pay/'.$code]);							$client->close();							$this->Admin_mo->set('notifications', array('type'=>'order','user'=>$this->session->userdata('uid'),'target'=>$order[0]->user,'action'=>'تم التاكد من اتاحة الوحدة المسجلة بكود '.$order[0]->code.' اضغط على الرابط التالي للدفع http://nojol.com/pay/'.$code,'time'=>time()));							echo 1;						}						else echo 0;					}					else echo 2;				}				else				{					if($this->Admin_mo->update('orders',array('accept'=>$_POST['val']),array('id'=>$_POST['id'])))					{						$this->Admin_mo->set('notifications', array('type'=>'order','user'=>$this->session->userdata('uid'),'target'=>$order[0]->user,'action'=>'للاسف الوحدة المسجلة بكود '.$order[0]->code.' غير متاحة','time'=>time()));						echo 1;					}					else echo 0;				}			}			else echo 0;		}		else echo 0;	}	public function rents()	{		if(strpos($this->loginuser->privileges, ',rsee,') !== false && in_array('RE',$this->sections))		{		$data['admessage'] = '';		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$employees = $this->Admin_mo->get('users'); foreach($employees as $employee) { $data['employees'][$employee->id] = $employee->username; }		//$places = $this->Admin_mo->get('places'); foreach($places as $place) { $data['places'][$place->id] = $place->title; }		//$services = $this->Admin_mo->getjoinLeft('services.id as id,sv_d.title as title','services',array('sv_d'=>'services.id = sv_d.service'),array('sv_d.code'=>$this->loginuser->lang)); foreach($services as $service) { $data['services'][$service->id] = $service->title; }		if($this->loginuser->utid == 4) $where = array('realestates.employee'=>$this->session->userdata('uid'));		else $where = array();		$data['rents'] = $this->Admin_mo->getjoinLeft('rents.*,realestates.code as code,realestates.title as title,realestates.employee as employee,realestates.user as owner','rents',array('realestates'=>'rents.realestate = realestates.id'),$where);		$this->load->view('calenderdate');		$this->load->view('headers/rents',$data);		$this->load->view('sidemenu',$data);		$this->load->view('topmenu',$data);		$this->load->view('admin/rents',$data);		$this->load->view('footers/rents');		$this->load->view('messages');		}		else		{		$data['title'] = 'rents';		$data['admessage'] = 'youhavenoprivls';		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$this->load->view('headers/rents',$data);		$this->load->view('sidemenu',$data);		$this->load->view('topmenu',$data);		$this->load->view('admin/messages',$data);		$this->load->view('footers/rents');		$this->load->view('messages');		}	}	public function rents_handler()	{		//$realestates = $this->Admin_mo->getwhere('realestates',array('realestates.available_from <'=>time()));		$realestates = $this->Admin_mo->getjoinLeft('rents.id as id,rents.user as customer,realestates.id as re_id,realestates.code as code','rents',array('realestates'=>'rents.realestate = realestates.id'),array('realestates.available_from != '=>'','realestates.available_from < '=>time()));		if(isset($realestates) && !empty($realestates))		{			foreach($realestates as $realestate)			{				$this->Admin_mo->update('realestates',array('available_from'=>'','customer'=>0),array('id'=>$realestate->re_id));				$this->Admin_mo->del('rents',array('id'=>$realestate->id));				$this->Admin_mo->set('notifications', array('type'=>'rent','user'=>0,'target'=>$realestate->customer,'action'=>'انتهت فترة استاجارك للوحدة المسجلة بكود '.$realestate->code,'time'=>time()));			}		}	}		public function orders_handler()	{		$orders = $this->Admin_mo->getjoinLeft('orders.id as id,calls.id as call_id','orders',array('calls'=>'orders.id = calls.order'),array('orders.to < '=>time()));		if(isset($orders) && !empty($orders))		{			$del = array();			foreach($orders as $order)			{				$this->Admin_mo->del('calls',array('id'=>$order->call_id));				if(!in_array($order->id,$del)) { $this->Admin_mo->del('orders',array('id'=>$order->id)); $del[] = $order->id; }			}		}	}	public function password_validation()	{		if($_POST['val1'] != '')		{			if(strlen($_POST['val1']) < 6) echo 2;			elseif(strlen($_POST['val1']) > 255) echo 3;			elseif($_POST['val2'] != '' && $_POST['val2'] != ' ' && $_POST['val1'] != $_POST['val2']) echo 4;			elseif($_POST['val2'] != '' && $_POST['val2'] != ' ' && $_POST['val1'] == $_POST['val2']) echo 5;			else echo 1;		}		else echo 0;	}		public function cnfpassword_validation()	{		if($_POST['val1'] != '' && $_POST['val2'] != '')		{			if($_POST['val1'] != $_POST['val2']) echo 4;			else echo 1;		}		else echo 0;	}		public function username_validation()	{		if($_POST['val'] != '' && $_POST['val'] != ' ')		{			if(isset($_POST['id']) && $_POST['id'] != '') $where = 'id <> '.$_POST['id'].' and';			else $where = '';						if(preg_match('/[^a-z]/',$_POST['val'])) echo 2;			elseif(strlen($_POST['val']) < 5) echo 3;			elseif(strlen($_POST['val']) >= 255) echo 5;			elseif($this->Admin_mo->exist('users','where '.$where.' username like "'.$_POST['val'].'"','')) echo 4;			else echo 1;		}		else echo 0;	}	public function add()	{		if(strpos($this->loginuser->privileges, ',uadd,') !== false && in_array('U',$this->sections))		{		$data['admessage'] = '';		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$data['usertypes'] = $this->Admin_mo->getwhere('usertypes',array('active'=>'1','id != '=>'1'));		$data['langs'] = $this->Admin_mo->getwhere('langs',array('active'=>'1'));						$employees = $this->Admin_mo->get('users'); 						$this->load->view('headers/user-add',$data);		$this->load->view('sidemenu',$data);		$this->load->view('topmenu',$data);		$this->load->view('admin/user-add',$data);		$this->load->view('footers/user-add',$data);		$this->load->view('messages');		}		else		{		$data['title'] = 'users';		$data['admessage'] = 'youhavenoprivls';		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$this->load->view('headers/users',$data);		$this->load->view('sidemenu',$data);		$this->load->view('topmenu',$data);		$this->load->view('admin/messages',$data);		$this->load->view('footers/users');		$this->load->view('messages');		}	}		public function create()	{		if(strpos($this->loginuser->privileges, ',uadd,') !== false && in_array('U',$this->sections))		{		    $this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$this->form_validation->set_error_delimiters('<div class="alert alert-danger alert-dismissible fade in" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>', '</div>');		$this->form_validation->set_rules('username', 'lang:username' , 'trim|alpha|required|max_length[255]|is_unique[users.username]');		$this->form_validation->set_rules('fname', 'lang:fname' , 'trim|required|max_length[255]');		$this->form_validation->set_rules('email', 'lang:email' , 'trim|required|max_length[255]|valid_email|is_unique[users.email]');		$this->form_validation->set_rules('password', 'lang:password', 'trim|required|min_length[6]|max_length[255]');		$this->form_validation->set_rules('cnfpassword', 'lang:cnfpassword', 'trim|required|matches[password]');		$this->form_validation->set_rules('mobile', 'lang:mobile' , 'trim|max_length[50]|numeric');		$this->form_validation->set_rules('address', 'lang:address' , 'trim|max_length[255]');		$this->form_validation->set_rules('usertype', 'lang:usertype' , 'trim|required');		$this->form_validation->set_rules('lang', 'lang:lang' , 'trim|required');		if($this->form_validation->run() == FALSE)		{			//$data['admessage'] = 'validation error';			//$_SESSION['time'] = time(); $_SESSION['message'] = 'inputnotcorrect';			$data['title'] = 'users';			$data['system'] = $this->mysystem;			$data['usertypes'] = $this->Admin_mo->getwhere('usertypes',array('active'=>'1','id != '=>'1'));			$data['langs'] = $this->Admin_mo->getwhere('langs',array('active'=>'1'));									$this->load->view('headers/user-add',$data);			$this->load->view('sidemenu',$data);			$this->load->view('topmenu',$data);			$this->load->view('admin/user-add',$data);			$this->load->view('footers/user-add',$data);			$this->load->view('messages');		}		else		{			$set_arr = array('uid'=>$this->session->userdata('uid'), 'code'=>mt_rand(11111,99999), 'username'=>set_value('username'), 'fname'=>set_value('fname'), 'lname'=>set_value('lname'), 'email'=>set_value('email'), 'password'=>password_hash(set_value('password'), PASSWORD_BCRYPT, array('cost'=>10)), 'utid'=>set_value('usertype'), 'lang'=>set_value('lang'), 'mobile'=>set_value('mobile'), 'active'=>set_value('active'), 'time'=>time());			$uid = $this->Admin_mo->set('users', $set_arr);			if(empty($uid))			{				$data['admessage'] = 'Not Saved';				$_SESSION['time'] = time(); $_SESSION['message'] = 'somthingwrong';				redirect('users/add', 'refresh');			}			else			{				$data['admessage'] = 'Successfully Saved';				$_SESSION['time'] = time(); $_SESSION['message'] = 'success';				redirect('users', 'refresh');			}		}		//redirect('users/add', 'refresh');		}		else		{		$data['title'] = 'users';		$data['admessage'] = 'youhavenoprivls';		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$this->load->view('headers/users',$data);		$this->load->view('sidemenu',$data);		$this->load->view('topmenu',$data);		$this->load->view('admin/messages',$data);		$this->load->view('footers/users');		$this->load->view('messages');		}	}		public function edit($id)	{		if(strpos($this->loginuser->privileges, ',uedit,') !== false && in_array('U',$this->sections))		{		$data['admessage'] = '';		$id = abs((int)($id));		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$data['usertypes'] = $this->Admin_mo->getwhere('usertypes',array('active'=>'1','id != '=>'1'));		$data['langs'] = $this->Admin_mo->getwhere('langs',array('active'=>'1'));		$data['user'] = $this->Admin_mo->getrow('users',array('id'=>$id));		if(!empty($data['user']))		{						$this->load->view('headers/user-edit',$data);			$this->load->view('sidemenu',$data);			$this->load->view('topmenu',$data);			$this->load->view('admin/user-edit',$data);			$this->load->view('footers/user-edit');			$this->load->view('messages');		}		else		{			$data['title'] = 'users';			$data['admessage'] = 'youhavenoprivls';			$this->load->view('headers/users',$data);			$this->load->view('sidemenu',$data);			$this->load->view('topmenu',$data);			$this->load->view('admin/messages',$data);			$this->load->view('footers/users');			$this->load->view('messages');		}		}		else		{		$data['title'] = 'users';		$data['admessage'] = 'youhavenoprivls';		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$this->load->view('headers/users',$data);		$this->load->view('sidemenu',$data);		$this->load->view('topmenu',$data);		$this->load->view('admin/messages',$data);		$this->load->view('footers/users');		$this->load->view('messages');		}	}		public function edituser($id)	{		if(strpos($this->loginuser->privileges, ',uedit,') !== false && in_array('U',$this->sections))		{		$id = abs((int)($id));		if($id != '')		{		    $this->lang->load($this->loginuser->lang, $this->loginuser->lang);			$this->config->set_item('language', $this->loginuser->lang);			$this->form_validation->set_error_delimiters('<div class="alert alert-danger alert-dismissible fade in" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">×</span></button>', '</div>');			$this->form_validation->set_rules('username', 'lang:username' , 'trim|alpha|required|max_length[255]');			$this->form_validation->set_rules('fname', 'lang:fname' , 'trim|required|max_length[255]');			$this->form_validation->set_rules('email', 'lang:email' , 'trim|required|max_length[255]|valid_email');			$this->form_validation->set_rules('password', 'lang:password', 'trim|min_length[6]|max_length[255]');			$this->form_validation->set_rules('cnfpassword', 'lang:cnfpassword', 'trim|matches[password]');			$this->form_validation->set_rules('mobile', 'lang:mobile' , 'trim|max_length[50]|numeric');			$this->form_validation->set_rules('usertype', 'lang:usertype' , 'trim|required');			$this->form_validation->set_rules('lang', 'lang:lang' , 'trim|required');			if($this->form_validation->run() == FALSE)			{				//$data['admessage'] = 'validation error';				//$_SESSION['time'] = time(); $_SESSION['message'] = 'inputnotcorrect';				$data['system'] = $this->mysystem;				$data['usertypes'] = $this->Admin_mo->getwhere('usertypes',array('active'=>'1','id != '=>'1'));				$data['langs'] = $this->Admin_mo->getwhere('langs',array('active'=>'1'));				$data['user'] = $this->Admin_mo->getrow('users',array('id'=>$id));															$this->load->view('headers/user-edit',$data);				$this->load->view('sidemenu',$data);				$this->load->view('topmenu',$data);				$this->load->view('admin/user-edit',$data);				$this->load->view('footers/user-edit');				$this->load->view('messages');			}			else			{				if($this->Admin_mo->exist('users','where id <> '.$id.' and username like "'.set_value('username').'"',''))				{					$_SESSION['time'] = time(); $_SESSION['message'] = 'usernameexist';					redirect('users/edit/'.$id, 'refresh');				}				if($this->Admin_mo->exist('users','where id <> '.$id.' and email like "'.set_value('email').'"',''))				{					$_SESSION['time'] = time(); $_SESSION['message'] = 'emailexist';					redirect('users/edit/'.$id, 'refresh');				}				else				{					$update_array = array('uid'=>$this->session->userdata('uid'), 'username'=>set_value('username'), 'fname'=>set_value('fname'), 'lname'=>set_value('lname'), 'email'=>set_value('email'), 'utid'=>set_value('usertype'), 'lang'=>set_value('lang'), 'mobile'=>set_value('mobile'), 'active'=>set_value('active'), 'time'=>time());					if(set_value('password') != '' && set_value('password') != ' ')  $update_array['password'] = password_hash(set_value('password'), PASSWORD_BCRYPT, array('cost'=>10));					if($this->Admin_mo->update('users', $update_array, array('id'=>$id)))					{						$_SESSION['time'] = time(); $_SESSION['message'] = 'success';					}					else					{						$_SESSION['time'] = time(); $_SESSION['message'] = 'somthingwrong';					}					redirect('users', 'refresh');				}			}		}		else		{			$_SESSION['time'] = time(); $_SESSION['message'] = 'somthingwrong';			redirect('users', 'refresh');		}		//redirect('users', 'refresh');		}		else		{		$data['title'] = 'users';		$data['admessage'] = 'youhavenoprivls';		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$this->load->view('headers/users',$data);		$this->load->view('sidemenu',$data);		$this->load->view('topmenu',$data);		$this->load->view('admin/messages',$data);		$this->load->view('footers/users');		$this->load->view('messages');		}	}	public function del($id)	{		$id = abs((int)($id));		if(strpos($this->loginuser->privileges, ',udelete,') !== false && $id != '1' && in_array('U',$this->sections))		{		$user = $this->Admin_mo->getrow('users', array('id'=>$id));		if(!empty($user))		{			if($user->img != '' && file_exists($this->config->item('users_folder').$user->img)) unlink($this->config->item('users_folder').$user->img);			if(file_exists($this->config->item('users_thumb_folder').$user->img)) unlink($this->config->item('users_thumb_folder').$user->img);			$this->Admin_mo->del('users', array('id'=>$id));			$_SESSION['time'] = time(); $_SESSION['message'] = 'success';			redirect('users', 'refresh');		}		else		{			$data['title'] = 'users';			$data['admessage'] = 'youhavenoprivls';			$data['system'] = $this->mysystem;			$this->lang->load($this->loginuser->lang, $this->loginuser->lang);			$this->config->set_item('language', $this->loginuser->lang);			$this->load->view('headers/users',$data);			$this->load->view('sidemenu',$data);			$this->load->view('topmenu',$data);			$this->load->view('admin/messages',$data);			$this->load->view('footers/users');			$this->load->view('messages');		}		}		else		{		$data['title'] = 'users';		$data['admessage'] = 'youhavenoprivls';		$data['system'] = $this->mysystem;		$this->lang->load($this->loginuser->lang, $this->loginuser->lang);		$this->config->set_item('language', $this->loginuser->lang);		$this->load->view('headers/users',$data);		$this->load->view('sidemenu',$data);		$this->load->view('topmenu',$data);		$this->load->view('admin/messages',$data);		$this->load->view('footers/users');		$this->load->view('messages');		}	}			public function imageSize()	{		if ($_FILES['logo']['size'] > 1024000)		{			//$this->form_validation->set_message('imageSize', 'يجب ان يكون حجم الصورة 1 ميجا او اقل');			return FALSE;		}		else		{			return TRUE;		}	}		public function imageType()	{		if (!in_array(strtoupper(pathinfo($_FILES['logo']['name'], PATHINFO_EXTENSION)),array('JPG','JPEG','PNG','JIF','BMP','TIF')))		{			//$this->form_validation->set_message('imageType', 'يجب ان يكون نوع الملف المرفوع واحد من هذه الانواع : JPG,JPEG,PNG,JIF,BMP,TIF');			return FALSE;		}		else		{			return TRUE;		}	}		public function uploadimg($inputfilename,$image_director,$image_director_thumb,$newname)	{		$file_extn = pathinfo($_FILES[$inputfilename]['name'], PATHINFO_EXTENSION);		if(!is_dir($image_director)) $create_image_director = mkdir($image_director);		$name = $newname.".".$file_extn;		if(move_uploaded_file($_FILES[$inputfilename]["tmp_name"], $image_director.$name))		{			if($image_director_thumb != '')			{				$this->load->library('Resize');				$this->resize->construct($image_director.$name);				$this->resize->resizeImage(210, 210, 'exact');				$this->resize->saveImage($image_director_thumb.$name, 100);			}			return $name;		}		else return '';	}}